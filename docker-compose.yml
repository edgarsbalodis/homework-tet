services:
  server1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server1
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - backscreen
    depends_on:
      - mysql

  nginx1:
    image: nginx:alpine
    container_name: server1-nginx
    ports:
      - "8081:80"
    volumes:
      - .:/var/www
      - ./nginx/server1.conf:/etc/nginx/conf.d/default.conf
    networks:
      - backscreen
    depends_on:
      - server1

  server2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server2
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - backscreen
    depends_on:
      - mysql

  nginx2:
    image: nginx:alpine
    container_name: server2-nginx
    ports:
      - "8082:80"
    volumes:
      - .:/var/www
      - ./nginx/server2.conf:/etc/nginx/conf.d/default.conf
    networks:
      - backscreen
    depends_on:
      - server2

  server3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: server3
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - backscreen
    depends_on:
      - mysql

  nginx3:
    image: nginx:alpine
    container_name: server3-nginx
    ports:
      - "8083:80"
    volumes:
      - .:/var/www
      - ./nginx/server3.conf:/etc/nginx/conf.d/default.conf
    networks:
      - backscreen
    depends_on:
      - server3

  mysql:
    image: mysql:8.0
    container_name: backscreen-mysql
    environment:
      MYSQL_DATABASE: tet_backscreen
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backscreen

networks:
  backscreen:
    driver: bridge

volumes:
  mysql_data:
    driver: local
